"""Fill in a module description here"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['Variable', 'Function', 'Square', 'Exp', 'numerical_diff']

# %% ../nbs/00_core.ipynb 3
import numpy as np

# %% ../nbs/00_core.ipynb 4
class Variable:
    def __init__(self, data):
        self.data = data

# %% ../nbs/00_core.ipynb 6
class Function:
    def __call__(self, input):
        assert type(input) == Variable, print(f"Expected Variable but got {type(input)}")
        x = input.data
        y = self.forward(x)
        y = np.array(y) if type(y)==np.int64 or type(y)==np.float64 else y
        output = Variable(y)
        return output

    def forward(self, in_data):
        raise NotImplementedError()

# %% ../nbs/00_core.ipynb 7
class Square(Function):
    def forward(self, x):
        return x ** 2

# %% ../nbs/00_core.ipynb 9
class Exp(Function):
    def forward(self, x):
        return np.exp(x)

# %% ../nbs/00_core.ipynb 12
def numerical_diff(f, x, eps=1e-4):
    x0 = Variable(x.data - eps)
    x1 = Variable(x.data + eps)
    y0 = f(x0)
    y1 = f(x1)
    return (y1.data - y0.data) / (2 * eps)
